◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1800,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1800,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1800, bias=False)
        (W_h): Linear(in_features=1800, out_features=1800, bias=False)
        (W_o): Linear(in_features=1933, out_features=1800, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1800, out_features=1800, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1800, out_features=1800, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1800, out_features=1, bias=True)
  )
)
Number of parameters = 13,473,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1800,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1800,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1800,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1800,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1800, bias=False)
        (W_h): Linear(in_features=1800, out_features=1800, bias=False)
        (W_o): Linear(in_features=1933, out_features=1800, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1800, out_features=1800, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1800, out_features=1800, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1800, out_features=1, bias=True)
  )
)
Number of parameters = 13,473,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1600,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1600,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1600, bias=False)
        (W_h): Linear(in_features=1600, out_features=1600, bias=False)
        (W_o): Linear(in_features=1733, out_features=1600, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1600, out_features=1600, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1600, out_features=1600, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1600, out_features=1, bias=True)
  )
)
Number of parameters = 10,696,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1400,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1400,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1400, bias=False)
        (W_h): Linear(in_features=1400, out_features=1400, bias=False)
        (W_o): Linear(in_features=1533, out_features=1400, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1400, out_features=1400, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1400, out_features=1400, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1400, out_features=1, bias=True)
  )
)
Number of parameters = 8,239,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 2000,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 2000,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 6,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=2000, bias=False)
        (W_h): Linear(in_features=2000, out_features=2000, bias=False)
        (W_o): Linear(in_features=2133, out_features=2000, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=2000, out_features=2000, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=2000, out_features=2000, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=2000, out_features=1, bias=True)
  )
)
Number of parameters = 16,570,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 60,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 2000,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 2000,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 5,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共5个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=2000, bias=False)
        (W_h): Linear(in_features=2000, out_features=2000, bias=False)
        (W_o): Linear(in_features=2133, out_features=2000, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=2000, out_features=2000, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=2000, out_features=2000, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=2000, out_features=1, bias=True)
  )
)
Number of parameters = 16,570,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎整个程序从cross_validate()函数开始执行--(cross_validate.py)◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎
______________即，执行K fold交叉验证（在每个分割数据（fold）上训练和测试一个ensemble模型）--（cross_validate.py）_______________
Command line--(cross_validate.py)
python--(cross_validate.py): main_train_cas1_model.py
输出参数Args--(cross_validate.py):
{'activation': 'ReLU',
 'adding_h': False,
 'aggregation': 'mean',
 'aggregation_norm': 100,
 'atom_descriptor_scaling': True,
 'atom_descriptors': None,
 'atom_descriptors_path': None,
 'atom_descriptors_size': 0,
 'atom_features_size': 0,
 'atom_messages': False,
 'batch_size': 80,
 'bias': False,
 'bias_solvent': False,
 'bond_feature_scaling': True,
 'bond_features_path': None,
 'bond_features_size': 0,
 'cache_cutoff': 10000,
 'checkpoint_dir': None,
 'checkpoint_frzn': None,
 'checkpoint_path': None,
 'checkpoint_paths': None,
 'class_balance': False,
 'config_path': None,
 'crossval_index_dir': None,
 'crossval_index_file': None,
 'crossval_index_sets': None,
 'cuda': True,
 'data_path': 'Cas1_data/Cas1_Uniref50_len400_smiles.csv',
 'data_weights_path': None,
 'dataset_type': 'classification',
 'depth': 3,
 'depth_solvent': 3,
 'device': device(type='cuda'),
 'dropout': 0.3,
 'empty_cache': False,
 'ensemble_size': 5,
 'epochs': 30,
 'evidential_regularization': 0,
 'explicit_h': False,
 'extra_metrics': [],
 'features_generator': None,
 'features_only': False,
 'features_path': None,
 'features_scaling': True,
 'features_size': None,
 'ffn_hidden_size': 1200,
 'ffn_num_layers': 3,
 'final_lr': 0.0001,
 'folds_file': None,
 'freeze_first_only': False,
 'frzn_ffn_layers': 0,
 'gpu': None,
 'grad_clip': None,
 'hidden_size': 1200,
 'hidden_size_solvent': 300,
 'ignore_columns': None,
 'init_lr': 0.0001,
 'log_frequency': 10,
 'loss_function': 'binary_cross_entropy',
 'max_data_size': None,
 'max_lr': 0.001,
 'metric': 'auc',
 'metrics': ['auc'],
 'minimize_score': False,
 'mpn_shared': False,
 'multiclass_num_classes': 3,
 'no_atom_descriptor_scaling': False,
 'no_bond_features_scaling': False,
 'no_cache_mol': False,
 'no_cuda': False,
 'no_features_scaling': False,
 'num_folds': 3,
 'num_lrs': 1,
 'num_tasks': 1,
 'num_workers': 8,
 'number_of_molecules': 1,
 'overwrite_default_atom_features': False,
 'overwrite_default_bond_features': False,
 'phase_features_path': None,
 'pytorch_seed': 0,
 'quiet': False,
 'reaction': False,
 'reaction_mode': 'reac_diff',
 'reaction_solvent': False,
 'resume_experiment': False,
 'save_dir': 'Cas1_with_nocas_smiles_checkpoints',
 'save_preds': False,
 'save_smiles_splits': False,
 'seed': 0,
 'separate_test_atom_descriptors_path': None,
 'separate_test_bond_features_path': None,
 'separate_test_features_path': None,
 'separate_test_path': None,
 'separate_test_phase_features_path': None,
 'separate_val_atom_descriptors_path': None,
 'separate_val_bond_features_path': None,
 'separate_val_features_path': None,
 'separate_val_path': None,
 'separate_val_phase_features_path': None,
 'show_individual_scores': False,
 'smiles_columns': ['smiles'],
 'spectra_activation': 'exp',
 'spectra_phase_mask_path': None,
 'spectra_target_floor': 1e-08,
 'split_key_molecule': 0,
 'split_sizes': [0.8, 0.1, 0.1],
 'split_type': 'random',
 'target_columns': None,
 'target_weights': None,
 'task_names': ['if_cas'],
 'test': False,
 'test_fold_index': None,
 'train_data_size': None,
 'undirected': False,
 'use_input_features': False,
 'val_fold_index': None,
 'warmup_epochs': 2.0}
保存参数args--(cross_validate.py)......
Setting molecule featurization parameters to default.

载入数据--(cross_validate.py):
Number of tasks = 1(目标类别总数，由输入数据决定)--(cross_validate.py)

★★★★★★★★★★★★★★★★★★↓↓↓↓↓fold循环开始--(cross_validate.py)【注意：每个fold数据在不同的随机种子上执行训练】★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共3个fold，当前第0个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 0......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 0--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 0 验证结果：auc = 0.717323--(run_training.py)

____________________________________↓↓↓model 0的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 1 验证结果：auc = 0.820567--(run_training.py)

____________________________________↓↓↓model 0的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 2 验证结果：auc = 0.860782--(run_training.py)

____________________________________↓↓↓model 0的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 3 验证结果：auc = 0.880017--(run_training.py)

____________________________________↓↓↓model 0的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 4 验证结果：auc = 0.906264--(run_training.py)

____________________________________↓↓↓model 0的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 5 验证结果：auc = 0.918248--(run_training.py)

____________________________________↓↓↓model 0的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 6 验证结果：auc = 0.937569--(run_training.py)

____________________________________↓↓↓model 0的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 7 验证结果：auc = 0.941788--(run_training.py)

____________________________________↓↓↓model 0的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 8 验证结果：auc = 0.947442--(run_training.py)

____________________________________↓↓↓model 0的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 9 验证结果：auc = 0.949915--(run_training.py)

____________________________________↓↓↓model 0的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 10 验证结果：auc = 0.954801--(run_training.py)

____________________________________↓↓↓model 0的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 11 验证结果：auc = 0.955244--(run_training.py)

____________________________________↓↓↓model 0的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 12 验证结果：auc = 0.958289--(run_training.py)

____________________________________↓↓↓model 0的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 13 验证结果：auc = 0.959686--(run_training.py)

____________________________________↓↓↓model 0的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 14 验证结果：auc = 0.961200--(run_training.py)

____________________________________↓↓↓model 0的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 15 验证结果：auc = 0.961467--(run_training.py)

____________________________________↓↓↓model 0的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 16 验证结果：auc = 0.963395--(run_training.py)

____________________________________↓↓↓model 0的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 17 验证结果：auc = 0.964605--(run_training.py)

____________________________________↓↓↓model 0的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 18 验证结果：auc = 0.964726--(run_training.py)

____________________________________↓↓↓model 0的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 19 验证结果：auc = 0.964951--(run_training.py)

____________________________________↓↓↓model 0的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 20 验证结果：auc = 0.968115--(run_training.py)

____________________________________↓↓↓model 0的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 21 验证结果：auc = 0.970776--(run_training.py)

____________________________________↓↓↓model 0的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 22 验证结果：auc = 0.970534--(run_training.py)

____________________________________↓↓↓model 0的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 23 验证结果：auc = 0.971868--(run_training.py)

____________________________________↓↓↓model 0的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 24 验证结果：auc = 0.970269--(run_training.py)

____________________________________↓↓↓model 0的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 25 验证结果：auc = 0.973626--(run_training.py)

____________________________________↓↓↓model 0的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 26 验证结果：auc = 0.975385--(run_training.py)

____________________________________↓↓↓model 0的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 27 验证结果：auc = 0.975557--(run_training.py)

____________________________________↓↓↓model 0的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 28 验证结果：auc = 0.976376--(run_training.py)

____________________________________↓↓↓model 0的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 29 验证结果：auc = 0.976257--(run_training.py)
选出最优验证结果对应的epoch：Model 0 best validation auc = 0.976376 on epoch 28 --(run_training.py)
____________________________________↓↓开始对ensemble的model 0 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 0相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 0 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 0 的test结果：auc = 0.977776 --(run_training.py)
__________________________________________↑↑ensemble的model 0测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第2个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 1 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 1的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 0 验证结果：auc = 0.698893--(run_training.py)

____________________________________↓↓↓model 1的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 1 验证结果：auc = 0.826882--(run_training.py)

____________________________________↓↓↓model 1的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 2 验证结果：auc = 0.857404--(run_training.py)

____________________________________↓↓↓model 1的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 3 验证结果：auc = 0.878002--(run_training.py)

____________________________________↓↓↓model 1的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 4 验证结果：auc = 0.884660--(run_training.py)

____________________________________↓↓↓model 1的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 5 验证结果：auc = 0.902129--(run_training.py)

____________________________________↓↓↓model 1的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 6 验证结果：auc = 0.922376--(run_training.py)

____________________________________↓↓↓model 1的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 7 验证结果：auc = 0.939608--(run_training.py)

____________________________________↓↓↓model 1的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 8 验证结果：auc = 0.946921--(run_training.py)

____________________________________↓↓↓model 1的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 9 验证结果：auc = 0.951123--(run_training.py)

____________________________________↓↓↓model 1的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 10 验证结果：auc = 0.949437--(run_training.py)

____________________________________↓↓↓model 1的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 11 验证结果：auc = 0.952625--(run_training.py)

____________________________________↓↓↓model 1的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 12 验证结果：auc = 0.956678--(run_training.py)

____________________________________↓↓↓model 1的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 13 验证结果：auc = 0.959463--(run_training.py)

____________________________________↓↓↓model 1的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 14 验证结果：auc = 0.958438--(run_training.py)

____________________________________↓↓↓model 1的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 15 验证结果：auc = 0.961793--(run_training.py)

____________________________________↓↓↓model 1的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 16 验证结果：auc = 0.958625--(run_training.py)

____________________________________↓↓↓model 1的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 17 验证结果：auc = 0.964167--(run_training.py)

____________________________________↓↓↓model 1的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 18 验证结果：auc = 0.966473--(run_training.py)

____________________________________↓↓↓model 1的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 19 验证结果：auc = 0.968333--(run_training.py)

____________________________________↓↓↓model 1的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 20 验证结果：auc = 0.967425--(run_training.py)

____________________________________↓↓↓model 1的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 21 验证结果：auc = 0.968532--(run_training.py)

____________________________________↓↓↓model 1的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 22 验证结果：auc = 0.970756--(run_training.py)

____________________________________↓↓↓model 1的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 23 验证结果：auc = 0.971329--(run_training.py)

____________________________________↓↓↓model 1的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 24 验证结果：auc = 0.973322--(run_training.py)

____________________________________↓↓↓model 1的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 25 验证结果：auc = 0.974014--(run_training.py)

____________________________________↓↓↓model 1的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 26 验证结果：auc = 0.975205--(run_training.py)

____________________________________↓↓↓model 1的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 27 验证结果：auc = 0.976839--(run_training.py)

____________________________________↓↓↓model 1的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 28 验证结果：auc = 0.976794--(run_training.py)

____________________________________↓↓↓model 1的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 29 验证结果：auc = 0.977874--(run_training.py)
选出最优验证结果对应的epoch：Model 1 best validation auc = 0.977874 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 1 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 1相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 1 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 1 的test结果：auc = 0.979820 --(run_training.py)
__________________________________________↑↑ensemble的model 1测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第3个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 2 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 2的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 0 验证结果：auc = 0.726118--(run_training.py)

____________________________________↓↓↓model 2的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 1 验证结果：auc = 0.816807--(run_training.py)

____________________________________↓↓↓model 2的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 2 验证结果：auc = 0.860659--(run_training.py)

____________________________________↓↓↓model 2的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 3 验证结果：auc = 0.879870--(run_training.py)

____________________________________↓↓↓model 2的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 4 验证结果：auc = 0.897585--(run_training.py)

____________________________________↓↓↓model 2的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 5 验证结果：auc = 0.902804--(run_training.py)

____________________________________↓↓↓model 2的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 6 验证结果：auc = 0.930081--(run_training.py)

____________________________________↓↓↓model 2的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 7 验证结果：auc = 0.939664--(run_training.py)

____________________________________↓↓↓model 2的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 8 验证结果：auc = 0.950106--(run_training.py)

____________________________________↓↓↓model 2的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 9 验证结果：auc = 0.951483--(run_training.py)

____________________________________↓↓↓model 2的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 10 验证结果：auc = 0.957437--(run_training.py)

____________________________________↓↓↓model 2的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 11 验证结果：auc = 0.958314--(run_training.py)

____________________________________↓↓↓model 2的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 12 验证结果：auc = 0.959048--(run_training.py)

____________________________________↓↓↓model 2的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 13 验证结果：auc = 0.960688--(run_training.py)

____________________________________↓↓↓model 2的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 14 验证结果：auc = 0.962701--(run_training.py)

____________________________________↓↓↓model 2的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 15 验证结果：auc = 0.964099--(run_training.py)

____________________________________↓↓↓model 2的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 16 验证结果：auc = 0.965055--(run_training.py)

____________________________________↓↓↓model 2的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 17 验证结果：auc = 0.965585--(run_training.py)

____________________________________↓↓↓model 2的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 18 验证结果：auc = 0.967737--(run_training.py)

____________________________________↓↓↓model 2的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 19 验证结果：auc = 0.969405--(run_training.py)

____________________________________↓↓↓model 2的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 20 验证结果：auc = 0.971360--(run_training.py)

____________________________________↓↓↓model 2的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 21 验证结果：auc = 0.973478--(run_training.py)

____________________________________↓↓↓model 2的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 22 验证结果：auc = 0.973873--(run_training.py)

____________________________________↓↓↓model 2的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 23 验证结果：auc = 0.974952--(run_training.py)

____________________________________↓↓↓model 2的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 24 验证结果：auc = 0.975799--(run_training.py)

____________________________________↓↓↓model 2的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 25 验证结果：auc = 0.976305--(run_training.py)

____________________________________↓↓↓model 2的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 26 验证结果：auc = 0.977090--(run_training.py)

____________________________________↓↓↓model 2的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 27 验证结果：auc = 0.977391--(run_training.py)

____________________________________↓↓↓model 2的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 28 验证结果：auc = 0.977703--(run_training.py)

____________________________________↓↓↓model 2的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 29 验证结果：auc = 0.978593--(run_training.py)
选出最优验证结果对应的epoch：Model 2 best validation auc = 0.978593 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 2 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 2相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 2 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 2 的test结果：auc = 0.982036 --(run_training.py)
__________________________________________↑↑ensemble的model 2测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第4个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 3 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 3的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 0 验证结果：auc = 0.716124--(run_training.py)

____________________________________↓↓↓model 3的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 1 验证结果：auc = 0.822038--(run_training.py)

____________________________________↓↓↓model 3的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 2 验证结果：auc = 0.858195--(run_training.py)

____________________________________↓↓↓model 3的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 3 验证结果：auc = 0.872548--(run_training.py)

____________________________________↓↓↓model 3的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 4 验证结果：auc = 0.885303--(run_training.py)

____________________________________↓↓↓model 3的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 5 验证结果：auc = 0.907925--(run_training.py)

____________________________________↓↓↓model 3的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 6 验证结果：auc = 0.911520--(run_training.py)

____________________________________↓↓↓model 3的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 7 验证结果：auc = 0.928175--(run_training.py)

____________________________________↓↓↓model 3的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 8 验证结果：auc = 0.939929--(run_training.py)

____________________________________↓↓↓model 3的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 9 验证结果：auc = 0.945163--(run_training.py)

____________________________________↓↓↓model 3的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 10 验证结果：auc = 0.947073--(run_training.py)

____________________________________↓↓↓model 3的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 11 验证结果：auc = 0.950605--(run_training.py)

____________________________________↓↓↓model 3的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 12 验证结果：auc = 0.954227--(run_training.py)

____________________________________↓↓↓model 3的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 13 验证结果：auc = 0.955670--(run_training.py)

____________________________________↓↓↓model 3的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 14 验证结果：auc = 0.957635--(run_training.py)

____________________________________↓↓↓model 3的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 15 验证结果：auc = 0.957929--(run_training.py)

____________________________________↓↓↓model 3的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 16 验证结果：auc = 0.962575--(run_training.py)

____________________________________↓↓↓model 3的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 17 验证结果：auc = 0.963100--(run_training.py)

____________________________________↓↓↓model 3的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 18 验证结果：auc = 0.962935--(run_training.py)

____________________________________↓↓↓model 3的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 19 验证结果：auc = 0.964665--(run_training.py)

____________________________________↓↓↓model 3的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 20 验证结果：auc = 0.966423--(run_training.py)

____________________________________↓↓↓model 3的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 21 验证结果：auc = 0.965185--(run_training.py)

____________________________________↓↓↓model 3的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 22 验证结果：auc = 0.965501--(run_training.py)

____________________________________↓↓↓model 3的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 23 验证结果：auc = 0.965630--(run_training.py)

____________________________________↓↓↓model 3的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 24 验证结果：auc = 0.968882--(run_training.py)

____________________________________↓↓↓model 3的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 25 验证结果：auc = 0.969400--(run_training.py)

____________________________________↓↓↓model 3的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 26 验证结果：auc = 0.966197--(run_training.py)

____________________________________↓↓↓model 3的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 27 验证结果：auc = 0.971687--(run_training.py)

____________________________________↓↓↓model 3的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 28 验证结果：auc = 0.971769--(run_training.py)

____________________________________↓↓↓model 3的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 29 验证结果：auc = 0.970368--(run_training.py)
选出最优验证结果对应的epoch：Model 3 best validation auc = 0.971769 on epoch 28 --(run_training.py)
____________________________________↓↓开始对ensemble的model 3 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 3相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 3 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 3 的test结果：auc = 0.976590 --(run_training.py)
__________________________________________↑↑ensemble的model 3测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第5个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 4 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 4的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 0 验证结果：auc = 0.714037--(run_training.py)

____________________________________↓↓↓model 4的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 1 验证结果：auc = 0.809657--(run_training.py)

____________________________________↓↓↓model 4的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 2 验证结果：auc = 0.850952--(run_training.py)

____________________________________↓↓↓model 4的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 3 验证结果：auc = 0.877756--(run_training.py)

____________________________________↓↓↓model 4的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 4 验证结果：auc = 0.901978--(run_training.py)

____________________________________↓↓↓model 4的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 5 验证结果：auc = 0.911433--(run_training.py)

____________________________________↓↓↓model 4的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 6 验证结果：auc = 0.927015--(run_training.py)

____________________________________↓↓↓model 4的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 7 验证结果：auc = 0.937999--(run_training.py)

____________________________________↓↓↓model 4的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 8 验证结果：auc = 0.945781--(run_training.py)

____________________________________↓↓↓model 4的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 9 验证结果：auc = 0.947529--(run_training.py)

____________________________________↓↓↓model 4的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 10 验证结果：auc = 0.957672--(run_training.py)

____________________________________↓↓↓model 4的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 11 验证结果：auc = 0.959863--(run_training.py)

____________________________________↓↓↓model 4的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 12 验证结果：auc = 0.959712--(run_training.py)

____________________________________↓↓↓model 4的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 13 验证结果：auc = 0.962722--(run_training.py)

____________________________________↓↓↓model 4的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 14 验证结果：auc = 0.965337--(run_training.py)

____________________________________↓↓↓model 4的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 15 验证结果：auc = 0.961551--(run_training.py)

____________________________________↓↓↓model 4的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 16 验证结果：auc = 0.966864--(run_training.py)

____________________________________↓↓↓model 4的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 17 验证结果：auc = 0.968696--(run_training.py)

____________________________________↓↓↓model 4的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 18 验证结果：auc = 0.969849--(run_training.py)

____________________________________↓↓↓model 4的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 19 验证结果：auc = 0.970939--(run_training.py)

____________________________________↓↓↓model 4的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 20 验证结果：auc = 0.972695--(run_training.py)

____________________________________↓↓↓model 4的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 21 验证结果：auc = 0.972346--(run_training.py)

____________________________________↓↓↓model 4的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 22 验证结果：auc = 0.973122--(run_training.py)

____________________________________↓↓↓model 4的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 23 验证结果：auc = 0.973723--(run_training.py)

____________________________________↓↓↓model 4的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 24 验证结果：auc = 0.973578--(run_training.py)

____________________________________↓↓↓model 4的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 25 验证结果：auc = 0.973256--(run_training.py)

____________________________________↓↓↓model 4的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 26 验证结果：auc = 0.975256--(run_training.py)

____________________________________↓↓↓model 4的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 27 验证结果：auc = 0.975909--(run_training.py)

____________________________________↓↓↓model 4的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 28 验证结果：auc = 0.976437--(run_training.py)

____________________________________↓↓↓model 4的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 29 验证结果：auc = 0.978490--(run_training.py)
选出最优验证结果对应的epoch：Model 4 best validation auc = 0.978490 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 4 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 4相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 4 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 4 的test结果：auc = 0.983511 --(run_training.py)
__________________________________________↑↑ensemble的model 4测试结束，保存结果__________________________________________
######################################################开始在测试集上评估当前整个ensemble集成模型--(run_training.py)######################################################
调用evaluate_predictions()函数计算当前ensemble模型在测试集上的表现......(run_training.py)
输出当前Ensemble的test结果： auc = 0.983003 --(run_training.py)
######################################################当前整个ensemble集成模型的测试结束--(run_training.py)##############################################################
保存分数（scores）......(run_training.py)
返回分数（scores）......(run_training.py)
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↑↑↑↑共3个fold，当前第0个fold结束--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共3个fold，当前第1个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 1......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 1--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 0 验证结果：auc = 0.735452--(run_training.py)

____________________________________↓↓↓model 0的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 1 验证结果：auc = 0.825889--(run_training.py)

____________________________________↓↓↓model 0的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 2 验证结果：auc = 0.869244--(run_training.py)

____________________________________↓↓↓model 0的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 3 验证结果：auc = 0.896451--(run_training.py)

____________________________________↓↓↓model 0的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 4 验证结果：auc = 0.912473--(run_training.py)

____________________________________↓↓↓model 0的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 5 验证结果：auc = 0.923304--(run_training.py)

____________________________________↓↓↓model 0的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 6 验证结果：auc = 0.937528--(run_training.py)

____________________________________↓↓↓model 0的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 7 验证结果：auc = 0.945460--(run_training.py)

____________________________________↓↓↓model 0的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 8 验证结果：auc = 0.956365--(run_training.py)

____________________________________↓↓↓model 0的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 9 验证结果：auc = 0.961376--(run_training.py)

____________________________________↓↓↓model 0的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 10 验证结果：auc = 0.963192--(run_training.py)

____________________________________↓↓↓model 0的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 11 验证结果：auc = 0.966072--(run_training.py)

____________________________________↓↓↓model 0的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 12 验证结果：auc = 0.962802--(run_training.py)

____________________________________↓↓↓model 0的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 13 验证结果：auc = 0.967291--(run_training.py)

____________________________________↓↓↓model 0的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 14 验证结果：auc = 0.973433--(run_training.py)

____________________________________↓↓↓model 0的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 15 验证结果：auc = 0.971301--(run_training.py)

____________________________________↓↓↓model 0的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 16 验证结果：auc = 0.974155--(run_training.py)

____________________________________↓↓↓model 0的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 17 验证结果：auc = 0.977013--(run_training.py)

____________________________________↓↓↓model 0的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 18 验证结果：auc = 0.979354--(run_training.py)

____________________________________↓↓↓model 0的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 19 验证结果：auc = 0.980363--(run_training.py)

____________________________________↓↓↓model 0的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 20 验证结果：auc = 0.981976--(run_training.py)

____________________________________↓↓↓model 0的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 21 验证结果：auc = 0.982650--(run_training.py)

____________________________________↓↓↓model 0的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 22 验证结果：auc = 0.983645--(run_training.py)

____________________________________↓↓↓model 0的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 23 验证结果：auc = 0.982540--(run_training.py)

____________________________________↓↓↓model 0的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 24 验证结果：auc = 0.985088--(run_training.py)

____________________________________↓↓↓model 0的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 25 验证结果：auc = 0.986105--(run_training.py)

____________________________________↓↓↓model 0的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 26 验证结果：auc = 0.986246--(run_training.py)

____________________________________↓↓↓model 0的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 27 验证结果：auc = 0.987267--(run_training.py)

____________________________________↓↓↓model 0的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 28 验证结果：auc = 0.986900--(run_training.py)

____________________________________↓↓↓model 0的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 29 验证结果：auc = 0.987226--(run_training.py)
选出最优验证结果对应的epoch：Model 0 best validation auc = 0.987267 on epoch 27 --(run_training.py)
____________________________________↓↓开始对ensemble的model 0 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 0相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 0 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 0 的test结果：auc = 0.979744 --(run_training.py)
__________________________________________↑↑ensemble的model 0测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第2个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 1 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 1的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 0 验证结果：auc = 0.718987--(run_training.py)

____________________________________↓↓↓model 1的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 1 验证结果：auc = 0.803493--(run_training.py)

____________________________________↓↓↓model 1的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 2 验证结果：auc = 0.866489--(run_training.py)

____________________________________↓↓↓model 1的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 3 验证结果：auc = 0.891925--(run_training.py)

____________________________________↓↓↓model 1的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 4 验证结果：auc = 0.905621--(run_training.py)

____________________________________↓↓↓model 1的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 5 验证结果：auc = 0.923925--(run_training.py)

____________________________________↓↓↓model 1的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 6 验证结果：auc = 0.930492--(run_training.py)

____________________________________↓↓↓model 1的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 7 验证结果：auc = 0.937013--(run_training.py)

____________________________________↓↓↓model 1的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 8 验证结果：auc = 0.951868--(run_training.py)

____________________________________↓↓↓model 1的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 9 验证结果：auc = 0.955316--(run_training.py)

____________________________________↓↓↓model 1的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 10 验证结果：auc = 0.959276--(run_training.py)

____________________________________↓↓↓model 1的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 11 验证结果：auc = 0.961131--(run_training.py)

____________________________________↓↓↓model 1的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 12 验证结果：auc = 0.963053--(run_training.py)

____________________________________↓↓↓model 1的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 13 验证结果：auc = 0.967205--(run_training.py)

____________________________________↓↓↓model 1的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 14 验证结果：auc = 0.969238--(run_training.py)

____________________________________↓↓↓model 1的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 15 验证结果：auc = 0.970643--(run_training.py)

____________________________________↓↓↓model 1的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 16 验证结果：auc = 0.970503--(run_training.py)

____________________________________↓↓↓model 1的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 17 验证结果：auc = 0.973807--(run_training.py)

____________________________________↓↓↓model 1的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 18 验证结果：auc = 0.975415--(run_training.py)

____________________________________↓↓↓model 1的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 19 验证结果：auc = 0.977505--(run_training.py)

____________________________________↓↓↓model 1的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 20 验证结果：auc = 0.978653--(run_training.py)

____________________________________↓↓↓model 1的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 21 验证结果：auc = 0.980806--(run_training.py)

____________________________________↓↓↓model 1的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 22 验证结果：auc = 0.981588--(run_training.py)

____________________________________↓↓↓model 1的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 23 验证结果：auc = 0.982388--(run_training.py)

____________________________________↓↓↓model 1的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 24 验证结果：auc = 0.982256--(run_training.py)

____________________________________↓↓↓model 1的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 25 验证结果：auc = 0.982198--(run_training.py)

____________________________________↓↓↓model 1的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 26 验证结果：auc = 0.983958--(run_training.py)

____________________________________↓↓↓model 1的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 27 验证结果：auc = 0.983627--(run_training.py)

____________________________________↓↓↓model 1的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 28 验证结果：auc = 0.982729--(run_training.py)

____________________________________↓↓↓model 1的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 29 验证结果：auc = 0.984719--(run_training.py)
选出最优验证结果对应的epoch：Model 1 best validation auc = 0.984719 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 1 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 1相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 1 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 1 的test结果：auc = 0.977482 --(run_training.py)
__________________________________________↑↑ensemble的model 1测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第3个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 2 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 2的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 0 验证结果：auc = 0.720953--(run_training.py)

____________________________________↓↓↓model 2的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 1 验证结果：auc = 0.803009--(run_training.py)

____________________________________↓↓↓model 2的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 2 验证结果：auc = 0.845189--(run_training.py)

____________________________________↓↓↓model 2的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 3 验证结果：auc = 0.882254--(run_training.py)

____________________________________↓↓↓model 2的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 4 验证结果：auc = 0.900386--(run_training.py)

____________________________________↓↓↓model 2的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 5 验证结果：auc = 0.920179--(run_training.py)

____________________________________↓↓↓model 2的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 6 验证结果：auc = 0.934682--(run_training.py)

____________________________________↓↓↓model 2的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 7 验证结果：auc = 0.939690--(run_training.py)

____________________________________↓↓↓model 2的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 8 验证结果：auc = 0.948061--(run_training.py)

____________________________________↓↓↓model 2的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 9 验证结果：auc = 0.952622--(run_training.py)

____________________________________↓↓↓model 2的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 10 验证结果：auc = 0.956378--(run_training.py)

____________________________________↓↓↓model 2的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 11 验证结果：auc = 0.953606--(run_training.py)

____________________________________↓↓↓model 2的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 12 验证结果：auc = 0.959804--(run_training.py)

____________________________________↓↓↓model 2的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 13 验证结果：auc = 0.963488--(run_training.py)

____________________________________↓↓↓model 2的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 14 验证结果：auc = 0.962488--(run_training.py)

____________________________________↓↓↓model 2的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 15 验证结果：auc = 0.967030--(run_training.py)

____________________________________↓↓↓model 2的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 16 验证结果：auc = 0.967828--(run_training.py)

____________________________________↓↓↓model 2的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 17 验证结果：auc = 0.969875--(run_training.py)

____________________________________↓↓↓model 2的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 18 验证结果：auc = 0.971230--(run_training.py)

____________________________________↓↓↓model 2的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 19 验证结果：auc = 0.970160--(run_training.py)

____________________________________↓↓↓model 2的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 20 验证结果：auc = 0.974232--(run_training.py)

____________________________________↓↓↓model 2的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 21 验证结果：auc = 0.973828--(run_training.py)

____________________________________↓↓↓model 2的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 22 验证结果：auc = 0.975173--(run_training.py)

____________________________________↓↓↓model 2的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 23 验证结果：auc = 0.977628--(run_training.py)

____________________________________↓↓↓model 2的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 24 验证结果：auc = 0.977708--(run_training.py)

____________________________________↓↓↓model 2的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 25 验证结果：auc = 0.979082--(run_training.py)

____________________________________↓↓↓model 2的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 26 验证结果：auc = 0.980799--(run_training.py)

____________________________________↓↓↓model 2的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 27 验证结果：auc = 0.980949--(run_training.py)

____________________________________↓↓↓model 2的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 28 验证结果：auc = 0.981675--(run_training.py)

____________________________________↓↓↓model 2的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 29 验证结果：auc = 0.981772--(run_training.py)
选出最优验证结果对应的epoch：Model 2 best validation auc = 0.981772 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 2 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 2相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 2 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 2 的test结果：auc = 0.976085 --(run_training.py)
__________________________________________↑↑ensemble的model 2测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第4个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 3 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 3的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 0 验证结果：auc = 0.711632--(run_training.py)

____________________________________↓↓↓model 3的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 1 验证结果：auc = 0.835872--(run_training.py)

____________________________________↓↓↓model 3的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 2 验证结果：auc = 0.864828--(run_training.py)

____________________________________↓↓↓model 3的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 3 验证结果：auc = 0.882948--(run_training.py)

____________________________________↓↓↓model 3的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 4 验证结果：auc = 0.902207--(run_training.py)

____________________________________↓↓↓model 3的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 5 验证结果：auc = 0.919130--(run_training.py)

____________________________________↓↓↓model 3的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 6 验证结果：auc = 0.934570--(run_training.py)

____________________________________↓↓↓model 3的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 7 验证结果：auc = 0.945887--(run_training.py)

____________________________________↓↓↓model 3的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 8 验证结果：auc = 0.954455--(run_training.py)

____________________________________↓↓↓model 3的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 9 验证结果：auc = 0.956278--(run_training.py)

____________________________________↓↓↓model 3的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 10 验证结果：auc = 0.961401--(run_training.py)

____________________________________↓↓↓model 3的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 11 验证结果：auc = 0.963115--(run_training.py)

____________________________________↓↓↓model 3的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 12 验证结果：auc = 0.964068--(run_training.py)

____________________________________↓↓↓model 3的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 13 验证结果：auc = 0.965621--(run_training.py)

____________________________________↓↓↓model 3的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 14 验证结果：auc = 0.967496--(run_training.py)

____________________________________↓↓↓model 3的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 15 验证结果：auc = 0.968560--(run_training.py)

____________________________________↓↓↓model 3的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 16 验证结果：auc = 0.970395--(run_training.py)

____________________________________↓↓↓model 3的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 17 验证结果：auc = 0.972472--(run_training.py)

____________________________________↓↓↓model 3的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 18 验证结果：auc = 0.973580--(run_training.py)

____________________________________↓↓↓model 3的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 19 验证结果：auc = 0.972992--(run_training.py)

____________________________________↓↓↓model 3的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 20 验证结果：auc = 0.975152--(run_training.py)

____________________________________↓↓↓model 3的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 21 验证结果：auc = 0.975423--(run_training.py)

____________________________________↓↓↓model 3的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 22 验证结果：auc = 0.977072--(run_training.py)

____________________________________↓↓↓model 3的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 23 验证结果：auc = 0.978568--(run_training.py)

____________________________________↓↓↓model 3的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 24 验证结果：auc = 0.978997--(run_training.py)

____________________________________↓↓↓model 3的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 25 验证结果：auc = 0.979401--(run_training.py)

____________________________________↓↓↓model 3的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 26 验证结果：auc = 0.979614--(run_training.py)

____________________________________↓↓↓model 3的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 27 验证结果：auc = 0.980474--(run_training.py)

____________________________________↓↓↓model 3的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 28 验证结果：auc = 0.979720--(run_training.py)

____________________________________↓↓↓model 3的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 29 验证结果：auc = 0.980914--(run_training.py)
选出最优验证结果对应的epoch：Model 3 best validation auc = 0.980914 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 3 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 3相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 3 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 3 的test结果：auc = 0.972511 --(run_training.py)
__________________________________________↑↑ensemble的model 3测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第5个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 4 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 4的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 0 验证结果：auc = 0.718877--(run_training.py)

____________________________________↓↓↓model 4的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 1 验证结果：auc = 0.814906--(run_training.py)

____________________________________↓↓↓model 4的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 2 验证结果：auc = 0.863294--(run_training.py)

____________________________________↓↓↓model 4的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 3 验证结果：auc = 0.885050--(run_training.py)

____________________________________↓↓↓model 4的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 4 验证结果：auc = 0.907397--(run_training.py)

____________________________________↓↓↓model 4的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 5 验证结果：auc = 0.917261--(run_training.py)

____________________________________↓↓↓model 4的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 6 验证结果：auc = 0.918229--(run_training.py)

____________________________________↓↓↓model 4的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 7 验证结果：auc = 0.942553--(run_training.py)

____________________________________↓↓↓model 4的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 8 验证结果：auc = 0.941767--(run_training.py)

____________________________________↓↓↓model 4的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 9 验证结果：auc = 0.944177--(run_training.py)

____________________________________↓↓↓model 4的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 10 验证结果：auc = 0.954570--(run_training.py)

____________________________________↓↓↓model 4的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 11 验证结果：auc = 0.954815--(run_training.py)

____________________________________↓↓↓model 4的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 12 验证结果：auc = 0.956350--(run_training.py)

____________________________________↓↓↓model 4的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 13 验证结果：auc = 0.964541--(run_training.py)

____________________________________↓↓↓model 4的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 14 验证结果：auc = 0.964717--(run_training.py)

____________________________________↓↓↓model 4的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 15 验证结果：auc = 0.966142--(run_training.py)

____________________________________↓↓↓model 4的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 16 验证结果：auc = 0.968567--(run_training.py)

____________________________________↓↓↓model 4的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 17 验证结果：auc = 0.971702--(run_training.py)

____________________________________↓↓↓model 4的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 18 验证结果：auc = 0.973805--(run_training.py)

____________________________________↓↓↓model 4的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 19 验证结果：auc = 0.974852--(run_training.py)

____________________________________↓↓↓model 4的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 20 验证结果：auc = 0.975779--(run_training.py)

____________________________________↓↓↓model 4的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 21 验证结果：auc = 0.974893--(run_training.py)

____________________________________↓↓↓model 4的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 22 验证结果：auc = 0.978387--(run_training.py)

____________________________________↓↓↓model 4的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 23 验证结果：auc = 0.977889--(run_training.py)

____________________________________↓↓↓model 4的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 24 验证结果：auc = 0.979574--(run_training.py)

____________________________________↓↓↓model 4的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 25 验证结果：auc = 0.981252--(run_training.py)

____________________________________↓↓↓model 4的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 26 验证结果：auc = 0.982428--(run_training.py)

____________________________________↓↓↓model 4的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 27 验证结果：auc = 0.981782--(run_training.py)

____________________________________↓↓↓model 4的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 28 验证结果：auc = 0.983448--(run_training.py)

____________________________________↓↓↓model 4的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 29 验证结果：auc = 0.983490--(run_training.py)
选出最优验证结果对应的epoch：Model 4 best validation auc = 0.983490 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 4 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 4相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 4 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 4 的test结果：auc = 0.977913 --(run_training.py)
__________________________________________↑↑ensemble的model 4测试结束，保存结果__________________________________________
######################################################开始在测试集上评估当前整个ensemble集成模型--(run_training.py)######################################################
调用evaluate_predictions()函数计算当前ensemble模型在测试集上的表现......(run_training.py)
输出当前Ensemble的test结果： auc = 0.979312 --(run_training.py)
######################################################当前整个ensemble集成模型的测试结束--(run_training.py)##############################################################
保存分数（scores）......(run_training.py)
返回分数（scores）......(run_training.py)
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↑↑↑↑共3个fold，当前第1个fold结束--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↓↓↓↓共3个fold，当前第2个fold开始--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●
___________________________________________________进入run_training.py建立ensemble 2......(cross_validate.py)___________________________________________________
___________________________________________________run_training()开始执行--（run_training.py）___________________________________________________
Splitting data with seed 2--(run_training.py)
Class sizes(输出每类目标的正负样本比例)--(run_training.py):
if_cas 0: 46.05%, 1: 53.95%
Total size = 19,193 | train size = 15,354 | val size = 1,919 | test size = 1,920
______________________________________以下开始建立当前ensemble集成模型，并对其内每个model进行训练、验证、测试--(run_training.py)______________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第1个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 0 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 0的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 0 验证结果：auc = 0.726772--(run_training.py)

____________________________________↓↓↓model 0的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 1 验证结果：auc = 0.801962--(run_training.py)

____________________________________↓↓↓model 0的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 2 验证结果：auc = 0.855570--(run_training.py)

____________________________________↓↓↓model 0的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 3 验证结果：auc = 0.867585--(run_training.py)

____________________________________↓↓↓model 0的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 4 验证结果：auc = 0.899493--(run_training.py)

____________________________________↓↓↓model 0的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 5 验证结果：auc = 0.922523--(run_training.py)

____________________________________↓↓↓model 0的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 6 验证结果：auc = 0.940099--(run_training.py)

____________________________________↓↓↓model 0的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 7 验证结果：auc = 0.947310--(run_training.py)

____________________________________↓↓↓model 0的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 8 验证结果：auc = 0.955542--(run_training.py)

____________________________________↓↓↓model 0的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 9 验证结果：auc = 0.964382--(run_training.py)

____________________________________↓↓↓model 0的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 10 验证结果：auc = 0.967632--(run_training.py)

____________________________________↓↓↓model 0的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 11 验证结果：auc = 0.970587--(run_training.py)

____________________________________↓↓↓model 0的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 12 验证结果：auc = 0.970960--(run_training.py)

____________________________________↓↓↓model 0的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 13 验证结果：auc = 0.967186--(run_training.py)

____________________________________↓↓↓model 0的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 14 验证结果：auc = 0.973560--(run_training.py)

____________________________________↓↓↓model 0的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 15 验证结果：auc = 0.973932--(run_training.py)

____________________________________↓↓↓model 0的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 16 验证结果：auc = 0.973499--(run_training.py)

____________________________________↓↓↓model 0的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 17 验证结果：auc = 0.975270--(run_training.py)

____________________________________↓↓↓model 0的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 18 验证结果：auc = 0.976377--(run_training.py)

____________________________________↓↓↓model 0的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 19 验证结果：auc = 0.977011--(run_training.py)

____________________________________↓↓↓model 0的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 20 验证结果：auc = 0.977643--(run_training.py)

____________________________________↓↓↓model 0的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 21 验证结果：auc = 0.979455--(run_training.py)

____________________________________↓↓↓model 0的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 22 验证结果：auc = 0.979114--(run_training.py)

____________________________________↓↓↓model 0的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 23 验证结果：auc = 0.980064--(run_training.py)

____________________________________↓↓↓model 0的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 24 验证结果：auc = 0.981227--(run_training.py)

____________________________________↓↓↓model 0的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 25 验证结果：auc = 0.981463--(run_training.py)

____________________________________↓↓↓model 0的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 26 验证结果：auc = 0.982111--(run_training.py)

____________________________________↓↓↓model 0的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 27 验证结果：auc = 0.982283--(run_training.py)

____________________________________↓↓↓model 0的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 28 验证结果：auc = 0.981410--(run_training.py)

____________________________________↓↓↓model 0的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 0的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 0的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 0的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 0 的 epoch 29 验证结果：auc = 0.981188--(run_training.py)
选出最优验证结果对应的epoch：Model 0 best validation auc = 0.982283 on epoch 27 --(run_training.py)
____________________________________↓↓开始对ensemble的model 0 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 0相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 0 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 0 的test结果：auc = 0.979226 --(run_training.py)
__________________________________________↑↑ensemble的model 0测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第2个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 1 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 1的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 0 验证结果：auc = 0.698949--(run_training.py)

____________________________________↓↓↓model 1的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 1 验证结果：auc = 0.816059--(run_training.py)

____________________________________↓↓↓model 1的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 2 验证结果：auc = 0.860984--(run_training.py)

____________________________________↓↓↓model 1的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 3 验证结果：auc = 0.875665--(run_training.py)

____________________________________↓↓↓model 1的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 4 验证结果：auc = 0.889979--(run_training.py)

____________________________________↓↓↓model 1的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 5 验证结果：auc = 0.915195--(run_training.py)

____________________________________↓↓↓model 1的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 6 验证结果：auc = 0.926677--(run_training.py)

____________________________________↓↓↓model 1的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 7 验证结果：auc = 0.942270--(run_training.py)

____________________________________↓↓↓model 1的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 8 验证结果：auc = 0.951024--(run_training.py)

____________________________________↓↓↓model 1的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 9 验证结果：auc = 0.953862--(run_training.py)

____________________________________↓↓↓model 1的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 10 验证结果：auc = 0.960225--(run_training.py)

____________________________________↓↓↓model 1的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 11 验证结果：auc = 0.963627--(run_training.py)

____________________________________↓↓↓model 1的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 12 验证结果：auc = 0.965610--(run_training.py)

____________________________________↓↓↓model 1的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 13 验证结果：auc = 0.968509--(run_training.py)

____________________________________↓↓↓model 1的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 14 验证结果：auc = 0.970404--(run_training.py)

____________________________________↓↓↓model 1的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 15 验证结果：auc = 0.969446--(run_training.py)

____________________________________↓↓↓model 1的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 16 验证结果：auc = 0.970786--(run_training.py)

____________________________________↓↓↓model 1的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 17 验证结果：auc = 0.973883--(run_training.py)

____________________________________↓↓↓model 1的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 18 验证结果：auc = 0.975039--(run_training.py)

____________________________________↓↓↓model 1的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 19 验证结果：auc = 0.975633--(run_training.py)

____________________________________↓↓↓model 1的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 20 验证结果：auc = 0.978296--(run_training.py)

____________________________________↓↓↓model 1的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 21 验证结果：auc = 0.978302--(run_training.py)

____________________________________↓↓↓model 1的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 22 验证结果：auc = 0.978614--(run_training.py)

____________________________________↓↓↓model 1的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 23 验证结果：auc = 0.978678--(run_training.py)

____________________________________↓↓↓model 1的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 24 验证结果：auc = 0.980468--(run_training.py)

____________________________________↓↓↓model 1的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 25 验证结果：auc = 0.980128--(run_training.py)

____________________________________↓↓↓model 1的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 26 验证结果：auc = 0.981650--(run_training.py)

____________________________________↓↓↓model 1的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 27 验证结果：auc = 0.981826--(run_training.py)

____________________________________↓↓↓model 1的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 28 验证结果：auc = 0.982631--(run_training.py)

____________________________________↓↓↓model 1的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 1的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 1的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 1的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 1 的 epoch 29 验证结果：auc = 0.982030--(run_training.py)
选出最优验证结果对应的epoch：Model 1 best validation auc = 0.982631 on epoch 28 --(run_training.py)
____________________________________↓↓开始对ensemble的model 1 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 1相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 1 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 1 的test结果：auc = 0.980397 --(run_training.py)
__________________________________________↑↑ensemble的model 1测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第3个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 2 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 2的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 0 验证结果：auc = 0.709317--(run_training.py)

____________________________________↓↓↓model 2的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 1 验证结果：auc = 0.790386--(run_training.py)

____________________________________↓↓↓model 2的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 2 验证结果：auc = 0.863519--(run_training.py)

____________________________________↓↓↓model 2的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 3 验证结果：auc = 0.876695--(run_training.py)

____________________________________↓↓↓model 2的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 4 验证结果：auc = 0.883135--(run_training.py)

____________________________________↓↓↓model 2的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 5 验证结果：auc = 0.909332--(run_training.py)

____________________________________↓↓↓model 2的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 6 验证结果：auc = 0.921239--(run_training.py)

____________________________________↓↓↓model 2的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 7 验证结果：auc = 0.929871--(run_training.py)

____________________________________↓↓↓model 2的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 8 验证结果：auc = 0.936331--(run_training.py)

____________________________________↓↓↓model 2的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 9 验证结果：auc = 0.950982--(run_training.py)

____________________________________↓↓↓model 2的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 10 验证结果：auc = 0.954438--(run_training.py)

____________________________________↓↓↓model 2的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 11 验证结果：auc = 0.965035--(run_training.py)

____________________________________↓↓↓model 2的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 12 验证结果：auc = 0.962305--(run_training.py)

____________________________________↓↓↓model 2的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 13 验证结果：auc = 0.968930--(run_training.py)

____________________________________↓↓↓model 2的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 14 验证结果：auc = 0.970054--(run_training.py)

____________________________________↓↓↓model 2的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 15 验证结果：auc = 0.973247--(run_training.py)

____________________________________↓↓↓model 2的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 16 验证结果：auc = 0.969997--(run_training.py)

____________________________________↓↓↓model 2的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 17 验证结果：auc = 0.976002--(run_training.py)

____________________________________↓↓↓model 2的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 18 验证结果：auc = 0.977403--(run_training.py)

____________________________________↓↓↓model 2的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 19 验证结果：auc = 0.977855--(run_training.py)

____________________________________↓↓↓model 2的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 20 验证结果：auc = 0.978106--(run_training.py)

____________________________________↓↓↓model 2的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 21 验证结果：auc = 0.977399--(run_training.py)

____________________________________↓↓↓model 2的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 22 验证结果：auc = 0.979804--(run_training.py)

____________________________________↓↓↓model 2的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 23 验证结果：auc = 0.979474--(run_training.py)

____________________________________↓↓↓model 2的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 24 验证结果：auc = 0.982521--(run_training.py)

____________________________________↓↓↓model 2的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 25 验证结果：auc = 0.982284--(run_training.py)

____________________________________↓↓↓model 2的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 26 验证结果：auc = 0.982664--(run_training.py)

____________________________________↓↓↓model 2的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 27 验证结果：auc = 0.983108--(run_training.py)

____________________________________↓↓↓model 2的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 28 验证结果：auc = 0.983206--(run_training.py)

____________________________________↓↓↓model 2的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 2的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 2的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 2的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 2 的 epoch 29 验证结果：auc = 0.983883--(run_training.py)
选出最优验证结果对应的epoch：Model 2 best validation auc = 0.983883 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 2 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 2相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 2 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 2 的test结果：auc = 0.981144 --(run_training.py)
__________________________________________↑↑ensemble的model 2测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第4个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 3 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 3的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 0 验证结果：auc = 0.732875--(run_training.py)

____________________________________↓↓↓model 3的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 1 验证结果：auc = 0.799628--(run_training.py)

____________________________________↓↓↓model 3的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 2 验证结果：auc = 0.842503--(run_training.py)

____________________________________↓↓↓model 3的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 3 验证结果：auc = 0.869492--(run_training.py)

____________________________________↓↓↓model 3的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 4 验证结果：auc = 0.876995--(run_training.py)

____________________________________↓↓↓model 3的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 5 验证结果：auc = 0.904029--(run_training.py)

____________________________________↓↓↓model 3的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 6 验证结果：auc = 0.924706--(run_training.py)

____________________________________↓↓↓model 3的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 7 验证结果：auc = 0.935052--(run_training.py)

____________________________________↓↓↓model 3的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 8 验证结果：auc = 0.945668--(run_training.py)

____________________________________↓↓↓model 3的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 9 验证结果：auc = 0.960703--(run_training.py)

____________________________________↓↓↓model 3的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 10 验证结果：auc = 0.960178--(run_training.py)

____________________________________↓↓↓model 3的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 11 验证结果：auc = 0.964574--(run_training.py)

____________________________________↓↓↓model 3的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 12 验证结果：auc = 0.967514--(run_training.py)

____________________________________↓↓↓model 3的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 13 验证结果：auc = 0.964540--(run_training.py)

____________________________________↓↓↓model 3的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 14 验证结果：auc = 0.973089--(run_training.py)

____________________________________↓↓↓model 3的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 15 验证结果：auc = 0.972856--(run_training.py)

____________________________________↓↓↓model 3的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 16 验证结果：auc = 0.977070--(run_training.py)

____________________________________↓↓↓model 3的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 17 验证结果：auc = 0.975748--(run_training.py)

____________________________________↓↓↓model 3的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 18 验证结果：auc = 0.976484--(run_training.py)

____________________________________↓↓↓model 3的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 19 验证结果：auc = 0.978898--(run_training.py)

____________________________________↓↓↓model 3的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 20 验证结果：auc = 0.979731--(run_training.py)

____________________________________↓↓↓model 3的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 21 验证结果：auc = 0.980918--(run_training.py)

____________________________________↓↓↓model 3的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 22 验证结果：auc = 0.982506--(run_training.py)

____________________________________↓↓↓model 3的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 23 验证结果：auc = 0.982190--(run_training.py)

____________________________________↓↓↓model 3的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 24 验证结果：auc = 0.982564--(run_training.py)

____________________________________↓↓↓model 3的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 25 验证结果：auc = 0.982945--(run_training.py)

____________________________________↓↓↓model 3的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 26 验证结果：auc = 0.984100--(run_training.py)

____________________________________↓↓↓model 3的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 27 验证结果：auc = 0.983651--(run_training.py)

____________________________________↓↓↓model 3的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 28 验证结果：auc = 0.984109--(run_training.py)

____________________________________↓↓↓model 3的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 3的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 3的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 3的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 3 的 epoch 29 验证结果：auc = 0.984478--(run_training.py)
选出最优验证结果对应的epoch：Model 3 best validation auc = 0.984478 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 3 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 3相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 3 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 3 的test结果：auc = 0.981842 --(run_training.py)
__________________________________________↑↑ensemble的model 3测试结束，保存结果__________________________________________
▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽循环训练ensemble中每个model，共5个model，当前第5个model--(run_training.py)▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽▽
____________________________________生成ensemble的model 4 --(run_training.py(cgx))____________________________________
将“消息传递网络”和“全连接网络”结合形成一个model--(run_training.py):
 MoleculeModel(
  (sigmoid): Sigmoid()
  (encoder): MPN(
    (encoder): ModuleList(
      (0): MPNEncoder(
        (dropout_layer): Dropout(p=0.3, inplace=False)
        (act_func): ReLU()
        (W_i): Linear(in_features=147, out_features=1200, bias=False)
        (W_h): Linear(in_features=1200, out_features=1200, bias=False)
        (W_o): Linear(in_features=1333, out_features=1200, bias=True)
      )
    )
  )
  (ffn): Sequential(
    (0): Dropout(p=0.3, inplace=False)
    (1): Linear(in_features=1200, out_features=1200, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=1200, out_features=1200, bias=True)
    (5): ReLU()
    (6): Dropout(p=0.3, inplace=False)
    (7): Linear(in_features=1200, out_features=1, bias=True)
  )
)
Number of parameters = 6,102,001 --(run_training.py)
Moving model to cuda--(run_training.py)

____________________________________↓↓↓model 4的Epoch 0 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 0 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 0 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 0 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 0 验证结果：auc = 0.711315--(run_training.py)

____________________________________↓↓↓model 4的Epoch 1 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 1 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 1 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 1 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 1 验证结果：auc = 0.825803--(run_training.py)

____________________________________↓↓↓model 4的Epoch 2 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 2 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 2 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 2 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 2 验证结果：auc = 0.858601--(run_training.py)

____________________________________↓↓↓model 4的Epoch 3 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 3 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 3 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 3 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 3 验证结果：auc = 0.870553--(run_training.py)

____________________________________↓↓↓model 4的Epoch 4 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 4 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 4 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 4 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 4 验证结果：auc = 0.883594--(run_training.py)

____________________________________↓↓↓model 4的Epoch 5 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 5 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 5 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 5 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 5 验证结果：auc = 0.905476--(run_training.py)

____________________________________↓↓↓model 4的Epoch 6 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 6 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 6 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 6 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 6 验证结果：auc = 0.916321--(run_training.py)

____________________________________↓↓↓model 4的Epoch 7 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 7 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 7 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 7 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 7 验证结果：auc = 0.927562--(run_training.py)

____________________________________↓↓↓model 4的Epoch 8 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 8 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 8 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 8 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 8 验证结果：auc = 0.943048--(run_training.py)

____________________________________↓↓↓model 4的Epoch 9 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 9 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 9 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 9 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 9 验证结果：auc = 0.950656--(run_training.py)

____________________________________↓↓↓model 4的Epoch 10 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 10 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 10 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 10 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 10 验证结果：auc = 0.955541--(run_training.py)

____________________________________↓↓↓model 4的Epoch 11 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 11 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 11 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 11 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 11 验证结果：auc = 0.958691--(run_training.py)

____________________________________↓↓↓model 4的Epoch 12 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 12 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 12 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 12 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 12 验证结果：auc = 0.953753--(run_training.py)

____________________________________↓↓↓model 4的Epoch 13 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 13 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 13 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 13 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 13 验证结果：auc = 0.962512--(run_training.py)

____________________________________↓↓↓model 4的Epoch 14 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 14 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 14 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 14 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 14 验证结果：auc = 0.967280--(run_training.py)

____________________________________↓↓↓model 4的Epoch 15 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 15 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 15 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 15 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 15 验证结果：auc = 0.968482--(run_training.py)

____________________________________↓↓↓model 4的Epoch 16 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 16 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 16 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 16 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 16 验证结果：auc = 0.968045--(run_training.py)

____________________________________↓↓↓model 4的Epoch 17 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 17 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 17 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 17 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 17 验证结果：auc = 0.965243--(run_training.py)

____________________________________↓↓↓model 4的Epoch 18 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 18 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 18 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 18 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 18 验证结果：auc = 0.969125--(run_training.py)

____________________________________↓↓↓model 4的Epoch 19 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 19 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 19 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 19 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 19 验证结果：auc = 0.968723--(run_training.py)

____________________________________↓↓↓model 4的Epoch 20 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 20 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 20 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 20 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 20 验证结果：auc = 0.974207--(run_training.py)

____________________________________↓↓↓model 4的Epoch 21 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 21 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 21 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 21 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 21 验证结果：auc = 0.975821--(run_training.py)

____________________________________↓↓↓model 4的Epoch 22 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 22 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 22 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 22 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 22 验证结果：auc = 0.974380--(run_training.py)

____________________________________↓↓↓model 4的Epoch 23 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 23 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 23 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 23 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 23 验证结果：auc = 0.977767--(run_training.py)

____________________________________↓↓↓model 4的Epoch 24 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 24 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 24 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 24 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 24 验证结果：auc = 0.979267--(run_training.py)

____________________________________↓↓↓model 4的Epoch 25 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 25 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 25 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 25 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 25 验证结果：auc = 0.976405--(run_training.py)

____________________________________↓↓↓model 4的Epoch 26 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 26 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 26 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 26 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 26 验证结果：auc = 0.981409--(run_training.py)

____________________________________↓↓↓model 4的Epoch 27 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 27 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 27 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 27 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 27 验证结果：auc = 0.981060--(run_training.py)

____________________________________↓↓↓model 4的Epoch 28 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 28 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 28 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 28 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 28 验证结果：auc = 0.981563--(run_training.py)

____________________________________↓↓↓model 4的Epoch 29 开始训练--(run_training.py)____________________________________
_______________________↑↑所有batch循环结束--(train.py(cgx))_______________________
____________________________________↑↑↑model 4的Epoch 29 训练结束--(run_training.py)_______________________________________________________
____________________________________↓↓↓model 4的Epoch 29 开始验证(调用evaluate()) --(run_training.py)____________________________________
____________________________________↑↑↑model 4的Epoch 29 验证(evaluate)结束 --(run_training.py)____________________________________
model 4 的 epoch 29 验证结果：auc = 0.983392--(run_training.py)
选出最优验证结果对应的epoch：Model 4 best validation auc = 0.983392 on epoch 29 --(run_training.py)
____________________________________↓↓开始对ensemble的model 4 进行测试（test）--(run_training.py)____________________________________
下面利用load_checkpoint()函数载入训练过程中存储的model 4相关文件用于测试（注意：内部还需要建立一个完整的model才能载入，因此会输出一些建立模型的信息）：--(run_training.py)
Loading pretrained parameter "encoder.encoder.0.cached_zero_vector".
Loading pretrained parameter "encoder.encoder.0.W_i.weight".
Loading pretrained parameter "encoder.encoder.0.W_h.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.weight".
Loading pretrained parameter "encoder.encoder.0.W_o.bias".
Loading pretrained parameter "ffn.1.weight".
Loading pretrained parameter "ffn.1.bias".
Loading pretrained parameter "ffn.4.weight".
Loading pretrained parameter "ffn.4.bias".
Loading pretrained parameter "ffn.7.weight".
Loading pretrained parameter "ffn.7.bias".
Moving model to cuda
load_checkpoint()载入model 4 结束--(run_training.py)
____________________________________调用predict()函数进行测试（test）（注意：虽然是测试，但依然用的是验证集数据！）--(run_training.py)____________________________________
____________________________________调用evaluate_predictions()函数对测试结果处理，得到测试分数--(run_training.py)_____________
____________________________________继续对测试结果进行处理--(run_training.py)____________________________________
输出当前ensembl的Model 4 的test结果：auc = 0.980016 --(run_training.py)
__________________________________________↑↑ensemble的model 4测试结束，保存结果__________________________________________
######################################################开始在测试集上评估当前整个ensemble集成模型--(run_training.py)######################################################
调用evaluate_predictions()函数计算当前ensemble模型在测试集上的表现......(run_training.py)
输出当前Ensemble的test结果： auc = 0.983059 --(run_training.py)
######################################################当前整个ensemble集成模型的测试结束--(run_training.py)##############################################################
保存分数（scores）......(run_training.py)
返回分数（scores）......(run_training.py)
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●↑↑↑↑共3个fold，当前第2个fold结束--(cross_validate.py)●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★↑↑↑↑↑fold循环结束--(cross_validate.py)★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
all_scores(added by cgx)--(cross_validate.py): 
 {'auc': array([[0.98300301],
       [0.97931245],
       [0.98305873]])}
共3个fold cross validation--(cross_validate.py)
	Seed(实际也是fold) 0 ==> test auc = 0.983003
	Seed(实际也是fold) 1 ==> test auc = 0.979312
	Seed(实际也是fold) 2 ==> test auc = 0.983059
Overall test auc = 0.981791 +/- 0.001753
保存scores......(cross_validate.py)
Elapsed time = 11 days, 22:56:53
